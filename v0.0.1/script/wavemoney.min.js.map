{"version":3,"file":"dist/v0.0.1/script/wavemoney.min.js","mappings":"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","sources":["webpack://WaveJsSDK/webpack/universalModuleDefinition","webpack://WaveJsSDK/webpack/bootstrap","webpack://WaveJsSDK/webpack/runtime/define property getters","webpack://WaveJsSDK/webpack/runtime/hasOwnProperty shorthand","webpack://WaveJsSDK/./src/modules/locationModule.ts","webpack://WaveJsSDK/./src/modules/deviceModule.ts","webpack://WaveJsSDK/./src/modules/mediaModule.ts","webpack://WaveJsSDK/./src/modules/userModule.ts","webpack://WaveJsSDK/./src/utils/queue.ts","webpack://WaveJsSDK/./node_modules/uuid/dist/esm-browser/native.js","webpack://WaveJsSDK/./node_modules/uuid/dist/esm-browser/rng.js","webpack://WaveJsSDK/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://WaveJsSDK/./node_modules/uuid/dist/esm-browser/v4.js","webpack://WaveJsSDK/./src/bridges/jsBridge.ts","webpack://WaveJsSDK/./src/configs/index.ts","webpack://WaveJsSDK/./src/modules/permissionModule.ts","webpack://WaveJsSDK/./src/platforms/platformChannels.ts","webpack://WaveJsSDK/./src/platforms/platformFactory.ts","webpack://WaveJsSDK/./src/modules/paymentModule.ts","webpack://WaveJsSDK/./src/modules/viewModule.ts","webpack://WaveJsSDK/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveJsSDK\"] = factory();\n\telse\n\t\troot[\"WaveJsSDK\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class LocationModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  getCurrentPosition() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getCurrentPosition',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n}\n","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class DeviceModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  getDeviceInformation() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getDeviceInformation',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n\n  getContact() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getContact',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n}\n","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class MediaModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  openCamera() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_openCamera',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n}\n","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class UserModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  getUserInformation() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getUserInformation',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n\n  getUserLoginStatus() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getUserLoginStatus',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n}\n","import { Callback } from '@src/types';\n\nlet bridgeQueue: Callback[] = [];\n\nexport { bridgeQueue };\n\nexport function addToQueue(queue: Callback) {\n  bridgeQueue.unshift(queue);\n}\n\nexport function removeFromQueue(queue: Callback) {\n  const payloadObjectIndex: number = bridgeQueue.map((callBack) => callBack.id).indexOf(queue.id);\n\n  if (payloadObjectIndex !== -1) {\n    bridgeQueue.splice(payloadObjectIndex, 1);\n  }\n}\n\nexport function clearQueue() {\n  bridgeQueue = [];\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { InitConfig, ResponseData, PostMessageData, Callback } from '@src/types';\nimport { OnSuccessCallback, OnErrorCallback } from '@src/interfaces/baseBridge';\nimport { bridgeQueue, addToQueue, removeFromQueue } from '@src/utils/queue';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BaseBridge } from '@src/interfaces/baseBridge';\nimport { PlatformChannel } from '@src/interfaces/platform';\nimport { UNKNOWN_ERROR_CODE } from '@src/configs';\n\n/**\n * This is bridge class that could serve as a communication\n * bridge between mini-web-app js-sdk and mobile.\n */\nexport class JsBridge implements BaseBridge {\n  private readonly config: InitConfig;\n  private readonly channel: PlatformChannel;\n\n  public constructor(channel: PlatformChannel, config: InitConfig) {\n    this.config = config;\n    this.channel = channel;\n  }\n\n  private get isSupportAsync(): boolean {\n    return this.channel.isSupportAsync();\n  }\n\n  /**\n   * This is the message handler for JS SDK sending messages to native side\n   *\n   * @param postMessagePayload message from mini-app JS SDK to native.\n   * @param onSuccess success callback\n   * @param onError error callback\n   */\n  async dispatchBridgePayload(\n    postMessagePayload: PostMessageData,\n    onSuccess: OnSuccessCallback,\n    onError: OnErrorCallback,\n  ) {\n    const transactionId = uuidv4();\n    postMessagePayload.request.requestTransactionId = transactionId;\n    postMessagePayload.request.clientId = this.config.clientId;\n\n    const messageQueue: Callback = {\n      id: transactionId,\n      onSuccess,\n      onError,\n    };\n\n    try {\n      addToQueue(messageQueue);\n\n      if (this.config.isDebug) {\n        console.log(`[JS-SDK] Req Payload => ${JSON.stringify(postMessagePayload)}`);\n      }\n\n      const response = await this.channel.handle(postMessagePayload);\n      if (this.isSupportAsync && response) {\n        return this.handleResponse(transactionId, response);\n      }\n\n      /**\n       * [NOTE] if not support async, you have to manually call `handleResponse` method to archive the pending request\n       *  */\n    } catch (error) {\n      removeFromQueue(messageQueue);\n      return onError({\n        response: {\n          error: {\n            code: UNKNOWN_ERROR_CODE,\n            message: `Unknown error ${JSON.stringify(error)}`,\n          },\n        },\n      });\n    }\n  }\n\n  /**\n   * This is the success callback that will be called from native side, via:\n   *    @function window.WaveJsSDK.handleResponse()\n   *\n   * Will then resolve the promise in the queue called by JS SDK from web side\n   *\n   * @param requestTransactionId id referenced to callback id in the queue\n   * @param mobileCallbackPayload The callback response from mobile.\n   */\n  handleResponse(requestTransactionId: string, mobileCallbackPayload: ResponseData): void {\n    /**\n     * Checks pending promise in the queue\n     */\n    const messageQueue: Callback = bridgeQueue.filter(\n      (payload) => payload.id === requestTransactionId,\n    )[0];\n\n    if (this.config.isDebug) {\n      console.log(`[JS-SDK] Response => ${JSON.stringify(mobileCallbackPayload)}`);\n    }\n\n    removeFromQueue(messageQueue);\n\n    if (mobileCallbackPayload?.response?.data) {\n      return messageQueue.onSuccess(mobileCallbackPayload);\n    }\n\n    return messageQueue.onError(mobileCallbackPayload);\n  }\n}\n","export const DEFAULT_TIMEOUT_IN_MILLISECOND = 1000;\nexport const WAVE_MONEY_FLUTTER_HANDLER_NAME = 'WaveJsSDK';\nexport const UNKNOWN_ERROR_CODE = 'WM-OTHER-001';\nexport const INVALID_REQ_ERROR_CODE = 'WM-OTHER-006';\n","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class PermissionModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  getPermissionList() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getPermissionList',\n            handlerType: 'function',\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n\n  getPermissionStatus(name: string) {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_getPermissionStatus',\n            handlerType: 'function',\n            data: {\n              name,\n            },\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n}\n","import { PostMessageData, ResponseData } from '@src/types';\nimport { PlatformChannel } from '@src/interfaces/platform';\nimport { WAVE_MONEY_FLUTTER_HANDLER_NAME } from '@src/configs';\n\nexport class FlutterPlatformChannel implements PlatformChannel {\n  isSupportAsync(): boolean {\n    return true;\n  }\n\n  handle(requestData: PostMessageData): Promise<ResponseData> {\n    return window.flutter_inappwebview.callHandler(\n      WAVE_MONEY_FLUTTER_HANDLER_NAME,\n      JSON.stringify(requestData),\n    );\n  }\n}\n\nexport class AndroidPlatformChannel implements PlatformChannel {\n  isSupportAsync(): boolean {\n    return false;\n  }\n\n  handle(requestData: PostMessageData): void {\n    return window.WaveMoneyAndroid.postMessage(JSON.stringify(requestData));\n  }\n}\n\nexport class IOSPlatformChannel implements PlatformChannel {\n  isSupportAsync(): boolean {\n    return false;\n  }\n\n  handle(requestData: PostMessageData): void {\n    return window.webkit.messageHandlers.WaveMoneyIOS.postMessage(JSON.stringify(requestData));\n  }\n}\n\nexport class StubPlatformChannel implements PlatformChannel {\n  isSupportAsync(): boolean {\n    return true;\n  }\n\n  handle(requestData: PostMessageData): Promise<ResponseData> {\n    return Promise.resolve({\n      response: {\n        data: requestData,\n      },\n    });\n  }\n}\n","import { PlatformChannel } from '@src/interfaces/platform';\nimport {\n  AndroidPlatformChannel,\n  FlutterPlatformChannel,\n  IOSPlatformChannel,\n  // StubPlatformChannel,\n} from '@src/platforms/platformChannels';\n\nexport class PlatformChannelFactory {\n  static createChannel(): PlatformChannel {\n    if (typeof window.WaveMoneyAndroid !== 'undefined') {\n      return new AndroidPlatformChannel();\n    } else if (typeof window.flutter_inappwebview !== 'undefined') {\n      return new FlutterPlatformChannel();\n    } else if (\n      typeof window.webkit !== 'undefined' &&\n      typeof window.webkit.messageHandlers.WaveMoneyIOS !== 'undefined'\n    ) {\n      return new IOSPlatformChannel();\n    }\n    throw new Error('Unsupported platform');\n    // return new StubPlatformChannel();\n  }\n}\n","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class PaymentModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  makePayment(amount: number, receiverMsisdn: string, orderID: string) {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      return this.bridge.dispatchBridgePayload(\n        {\n          request: {\n            handlerFunction: '_makePayment',\n            handlerType: 'function',\n            data: {\n              amount,\n              receiverMsisdn,\n              orderID,\n            },\n          },\n        },\n        resolve,\n        reject,\n      );\n    });\n  }\n}\n","import { BaseBridge, OnErrorCallback, OnSuccessCallback } from '@src/interfaces/baseBridge';\n\nexport class ViewModule {\n  protected bridge: BaseBridge;\n\n  constructor(bridge: BaseBridge) {\n    this.bridge = bridge;\n  }\n\n  private debounceTimeout: NodeJS.Timeout | null = null;\n\n  exit() {\n    return new Promise((resolve: OnSuccessCallback, reject: OnErrorCallback) => {\n      if (this.debounceTimeout) {\n        clearTimeout(this.debounceTimeout);\n      }\n\n      this.debounceTimeout = setTimeout(async () => {\n        await this.bridge.dispatchBridgePayload(\n          {\n            request: {\n              handlerFunction: '_exit',\n              handlerType: 'function',\n            },\n          },\n          resolve,\n          reject,\n        );\n        this.debounceTimeout = null;\n      }, 300);\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport { InitConfig, ResponseData } from '@src/types';\nimport { LocationModule } from '@src/modules/locationModule';\nimport { DeviceModule } from '@src/modules/deviceModule';\nimport { MediaModule } from '@src/modules/mediaModule';\nimport { UserModule } from '@src/modules/userModule';\nimport { JsBridge } from '@src/bridges/jsBridge';\nimport { PermissionModule } from '@src/modules/permissionModule';\nimport { PlatformChannelFactory } from '@src/platforms/platformFactory';\nimport { PlatformChannel } from '@src/interfaces/platform';\nimport { PaymentModule } from './modules/paymentModule';\nimport { ViewModule } from './modules/viewModule';\n\nexport default class WaveJsSDK {\n  protected locationModule: LocationModule | undefined;\n  protected deviceModule: DeviceModule | undefined;\n  protected mediaModule: MediaModule | undefined;\n  protected userModule: UserModule | undefined;\n  protected permissionModule: PermissionModule | undefined;\n  protected paymentModule: PaymentModule | undefined;\n  protected viewModule: ViewModule | undefined;\n\n  init(config: InitConfig) {\n    const channel: PlatformChannel = PlatformChannelFactory.createChannel();\n    const jsBridge = new JsBridge(channel, config);\n\n    this.permissionModule = new PermissionModule(jsBridge);\n    this.locationModule = new LocationModule(jsBridge);\n    this.deviceModule = new DeviceModule(jsBridge);\n    this.mediaModule = new MediaModule(jsBridge);\n    this.userModule = new UserModule(jsBridge);\n    this.paymentModule = new PaymentModule(jsBridge);\n    this.viewModule = new ViewModule(jsBridge);\n\n    const waveSdk = {\n      // required by native side usage\n      handleResponse: (tnxId: string, data: ResponseData) => jsBridge.handleResponse(tnxId, data),\n\n      permissionModule: this.permissionModule,\n      locationModule: this.locationModule,\n      deviceModule: this.deviceModule,\n      mediaModule: this.mediaModule,\n      userModule: this.userModule,\n      paymentModule: this.paymentModule,\n      viewModule: this.viewModule,\n    };\n\n    // attach WaveJsSDK to global window when initialized\n    window.WaveJsSDK = waveSdk;\n\n    return waveSdk;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","LocationModule","constructor","bridge","getCurrentPosition","Promise","resolve","reject","dispatchBridgePayload","request","handlerFunction","handlerType","DeviceModule","getDeviceInformation","getContact","MediaModule","openCamera","UserModule","getUserInformation","getUserLoginStatus","bridgeQueue","removeFromQueue","queue","payloadObjectIndex","map","callBack","id","indexOf","splice","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","JsBridge","channel","config","isSupportAsync","postMessagePayload","onSuccess","onError","transactionId","requestTransactionId","clientId","messageQueue","unshift","isDebug","console","log","JSON","stringify","response","handle","handleResponse","error","code","message","mobileCallbackPayload","filter","payload","data","PermissionModule","getPermissionList","getPermissionStatus","name","FlutterPlatformChannel","requestData","window","flutter_inappwebview","callHandler","AndroidPlatformChannel","WaveMoneyAndroid","postMessage","IOSPlatformChannel","webkit","messageHandlers","WaveMoneyIOS","PlatformChannelFactory","static","PaymentModule","makePayment","amount","receiverMsisdn","orderID","ViewModule","debounceTimeout","exit","clearTimeout","setTimeout","WaveJsSDK","init","createChannel","jsBridge","permissionModule","locationModule","deviceModule","mediaModule","userModule","paymentModule","viewModule","waveSdk","tnxId"],"sourceRoot":""}